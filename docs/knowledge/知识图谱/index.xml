<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>知识图谱 | Ysyy's</title><link>https://ysyyhhh.github.io/docs/knowledge/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/</link><atom:link href="https://ysyyhhh.github.io/docs/knowledge/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/index.xml" rel="self" type="application/rss+xml"/><description>知识图谱</description><generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><image><url>https://ysyyhhh.github.io/media/logo.svg</url><title>知识图谱</title><link>https://ysyyhhh.github.io/docs/knowledge/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/</link></image><item><title/><link>https://ysyyhhh.github.io/docs/knowledge/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ysyyhhh.github.io/docs/knowledge/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E5%9F%BA%E7%A1%80/</guid><description>&lt;h1 id="知识图谱基础">知识图谱基础&lt;/h1>
&lt;h2 id="参考">参考&lt;/h2>
&lt;p>&lt;a href="https://www.cnblogs.com/huangyc/p/10043749.html" target="_blank" rel="noopener">通俗易懂解释知识图谱（Knowledge Graph）&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://support.huaweicloud.com/qs-kg/kg_05_0002.html" target="_blank" rel="noopener">华为最佳实践-快速构建知识图谱&lt;/a>&lt;/p>
&lt;h2 id="知识图谱技术架构">知识图谱技术架构&lt;/h2>
&lt;p>构建知识图谱的过程:&lt;/p>
&lt;ul>
&lt;li>信息抽取：从各种类型的数据源中提取出实体、属性以及实体间的相互关系，在此基础上形成本体化的知识表达；&lt;/li>
&lt;li>知识融合：在获得新知识之后，需要对其进行整合，以消除矛盾和歧义，比如某些实体可能有多种表达，某个特定称谓也许对应于多个不同的实体等；&lt;/li>
&lt;li>知识加工：对于经过融合的新知识，需要经过质量评估之后（部分需要人工参与甄别），才能将合格的部分加入到知识库中，以确保知识库的质量。&lt;/li>
&lt;/ul>
&lt;p>知识图谱在逻辑上可分为模式层与数据层两个层次。&lt;/p>
&lt;ul>
&lt;li>模式层构建在数据层之上，是知识图谱的核心，通常采用本体库来管理知识图谱的模式层。本体是结构化知识库的概念模板，通过本体库而形成的知识库不仅层次结构较强，并且冗余程度较小。&lt;/li>
&lt;/ul>
&lt;p>模式层：实体-关系-实体，实体-属性-属性值&lt;/p>
&lt;ul>
&lt;li>数据层主要是由一系列的事实组成，而知识将以事实为单位进行存储。如果用(实体1，关系，实体2)、(实体、属性，属性值)这样的三元组来表达事实，可选择图数据库作为存储介质，例如开源的Neo4j、Twitter的FlockDB、sones的GraphDB等。&lt;/li>
&lt;/ul>
&lt;p>数据层：比尔盖茨-妻子-梅琳达·盖茨，比尔盖茨-总裁-微软&lt;/p>
&lt;h3 id="信息提取">信息提取&lt;/h3>
&lt;p>步骤:&lt;/p>
&lt;ul>
&lt;li>实体抽取(Entity Extraction)
&lt;ul>
&lt;li>又称为命名实体识别（named entity recognition，NER），是指从文本数据集中自动识别出命名实体。&lt;/li>
&lt;li>这里的实体是抽象实体,如&amp;quot;电影&amp;quot;、&amp;ldquo;人物&amp;quot;等,而不是确切的实体对象。&lt;/li>
&lt;li>实体抽取的质量（准确率和召回率）对后续的知识获取效率和质量影响极大，因此是信息抽取中最为基础和关键的部分。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>关系抽取(Relation Extraction)&lt;/li>
&lt;li>属性抽取(Attribute Extraction)
&lt;ul>
&lt;li>这里理解的属性是指实体的特征，如&amp;quot;电影&amp;quot;的&amp;quot;导演&amp;rdquo;、&amp;ldquo;上映时间&amp;quot;等。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="知识融合">知识融合&lt;/h3>
&lt;p>步骤:&lt;/p>
&lt;ul>
&lt;li>实体链接: 是指对于从文本中抽取得到的实体对象，将其链接到知识库中对应的正确实体对象的操作。&lt;/li>
&lt;li>知识合并: 常见的知识合并需求有两个，一个是合并外部知识库，另一个是合并关系数据库。&lt;/li>
&lt;/ul>
&lt;h3 id="知识加工">知识加工&lt;/h3>
&lt;p>事实本身并不等于知识。要想最终获得结构化，网络化的知识体系，还需要经历知识加工的过程。&lt;/p>
&lt;ul>
&lt;li>本体构建
&lt;ul>
&lt;li>本体（ontology）是指工人的概念集合、概念框架，如“人”、“事”、“物”等。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>知识推理
&lt;ul>
&lt;li>在我们完成了本体构建这一步之后，一个知识图谱的雏形便已经搭建好了。但可能在这个时候，知识图谱之间大多数关系都是残缺的，缺失值非常严重，那么这个时候，我们就可以使用知识推理技术，去完成进一步的知识发现。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>质量评估
&lt;ul>
&lt;li>可以对知识的可信度进行量化，通过舍弃置信度较低的知识来保障知识库的质量。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="知识更新">知识更新&lt;/h3>
&lt;p>全面更新：指以更新后的全部数据为输入，从零开始构建知识图谱。这种方法比较简单，但资源消耗大，而且需要耗费大量人力资源进行系统维护；&lt;/p>
&lt;p>增量更新：以当前新增数据为输入，向现有知识图谱中添加新增知识。这种方式资源消耗小，但目前仍需要大量人工干预（定义规则等），因此实施起来十分困难。&lt;/p>
&lt;h2 id="知识图谱分类">知识图谱分类&lt;/h2>
&lt;p>而知识图谱在知识体系的层面上又有三种具体的组织分类，包括Ontology、Taxonomy和Folksonomy。&lt;/p>
&lt;p>层级关系的三种不同严格程度的区分。&lt;/p>
&lt;ul>
&lt;li>Ontology为树状结构，对不同层节点之间具有最严格的IsA关系
&lt;ul>
&lt;li>（打个比方，Human activities -&amp;gt; sports -&amp;gt; football），这类图谱的优点是便于&lt;strong>知识推理&lt;/strong>，但是&lt;strong>无法表示概念关系的多样性&lt;/strong>；&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Taxonomy也是树状结构，但是层级严格程度低一些，节点间是以Hypernym-Hyponym关系构建，这样的好处的概念关系比较丰富，但是也因此容易造成歧义，很难有效地推理；
&lt;ul>
&lt;li>例: 广泛地用来表示互联网上的网络结构，比如：文件列表（想象一下本地文件左侧展示的文本目录）、购物网站搜索的分类、百科网站的目录（含一级标题，二级标题等）。换言之，taxonomy中的节点，往往是以Hypernym-Hyponym关系构建的。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Folksonomy则是非层级的结构，全部节点以标签分类，除了灵活以外，语义的精确性、推理能力也全都丧失了。&lt;/li>
&lt;/ul>
&lt;p>目前，Taxonomy的组织结构是互联网行业内较为流行的类型，因为它在一定程度上兼顾上下层关系和标签体系，在各类应用上的灵活性最好.&lt;/p></description></item></channel></rss>